package at.htlhl.chess.engine;

public class PositionTables {
    public static final int[][] whitePieceSquareTables = {
            // PAWN
            {
                    0,   0,   0,   0,   0,   0,   0,   0,
                    11,  14,  16,  19,  19,  16,  14,  11,
                    4,   7,  10,  13,  13,  10,   7,   4,
                    1,   4,   7,  12,  12,   7,   4,   1,
                    0,   1,   5,  11,  11,   5,   1,   0,
                    0,   5,   2,   0,   0,   2,   5,   0,
                    0,   0,   0, -50, -50,   0,   0,   0,
                    0,   0,   0,   0,   0,   0,   0,   0
            },
            // KNIGHT
            {
                    -25, -20, -15, -15, -15, -15, -20, -25,
                    -20, -10,   0,   3,   3,   0, -10, -20,
                    -15,   3,   5,   8,   8,   5,   3, -15,
                    -15,   5,   8,  10,  10,   8,   5, -15,
                    -15,   5,   8,  10,  10,   8,   5, -15,
                    -15,   3,   5,   8,   8,   5,   3, -15,
                    -20, -10,   0,   3,   3,   0, -10, -20,
                    -25, -20, -15, -15, -15, -15, -20, -25
            },
            // BISHOP
            {
                    -10,  -5,  -5,  -5,  -5,  -5,  -5, -10,
                    -5,    0,   0,   0,   0,   0,   0,  -5,
                    -5,    6,   7,   8,   8,   7,   6,  -5,
                    -5,   10,  10,   8,   8,  10,  10,  -5,
                    -5,    0,  10,   8,   8,  10,   0,  -5,
                    -5,   10,   6,  10,  10,   6,  10,  -5,
                    -5,   10,   0,   0,   0,   0,  10,  -5,
                    -10,  -5, -10,  -5,  -5, -10,  -5, -10
            },
            // ROOK
            {
                    0,   3,   3,   3,   3,   3,   3,   0,
                    3,   5,   5,   5,   5,   5,   5,   3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    0,   0,   0,   0,   0,   0,   0,   0
            },
            // QUEEN
            {
                    -5,  -3,  -3,  -2,  -2,  -3,  -3,  -5,
                    -3,   0,   0,   2,   2,   0,   0,  -3,
                    -3,   0,   2,   4,   4,   2,   0,  -3,
                    -2,   0,   4,   5,   5,   4,   0,  -2,
                    -2,   0,   4,   5,   5,   4,   0,  -2,
                    -3,   0,   2,   4,   4,   2,   0,  -3,
                    -3,   0,   0,   2,   2,   0,   0,  -3,
                    -5,  -3,  -3,  -2,  -2,  -3,  -3,  -5
            },
            // KING
            {
                    -15, -20, -20, -25, -25, -20, -20, -15,
                    -15, -20, -20, -25, -25, -20, -20, -15,
                    -15, -20, -20, -25, -25, -20, -20, -15,
                    -10, -15, -15, -20, -20, -15, -15, -10,
                    -5, -10, -10, -15, -15, -10, -10,  -5,
                    0,   0,  -5, -10, -10,  -5,   0,   0,
                    10,  10,   0,  -3,  -3,   0,  10,  10,
                    15,  20,  10,   0,   0,   5,  20,  15
            }
    };

    public static final int[][] blackPieceSquareTables = {
            // PAWN
            {
                    0,   0,   0,   0,   0,   0,   0,   0,
                    0,   0,   0, -50, -50,   0,   0,   0,
                    0,   5,   2,   0,   0,   2,   5,   0,
                    0,   1,   5,  11,  11,   5,   1,   0,
                    1,   4,   7,  12,  12,   7,   4,   1,
                    4,   7,  10,  13,  13,  10,   7,   4,
                    11,  14,  16,  19,  19,  16,  14,  11,
                    0,   0,   0,   0,   0,   0,   0,   0
            },
            // KNIGHT
            {
                    -25, -20, -15, -15, -15, -15, -20, -25,
                    -20, -10,   0,   3,   3,   0, -10, -20,
                    -15,   3,   5,   8,   8,   5,   3, -15,
                    -15,   5,   8,  10,  10,   8,   5, -15,
                    -15,   5,   8,  10,  10,   8,   5, -15,
                    -15,   3,   5,   8,   8,   5,   3, -15,
                    -20, -10,   0,   3,   3,   0, -10, -20,
                    -25, -20, -15, -15, -15, -15, -20, -25
            },
            // BISHOP
            {
                    -10,  -5,  -5,  -5,  -5,  -5,  -5, -10,
                    -5,   10,   0,   0,   0,   0,  10,  -5,
                    -5,   10,   6,  10,  10,   6,  10,  -5,
                    -5,    0,  10,  8,    8,  10,   0,  -5,
                    -5,   10,  10,  8,    8,  10,  10,  -5,
                    -5,    6,   7,   8,   8,   7,   6,  -5,
                    -5,    0,   0,   0,   0,   0,   0,  -5,
                    -10,  -5, -10,  -5,  -5, -10,  -5, -10
            },
            // ROOK
            {
                    0,   0,   0,   0,   0,   0,   0,   0,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    -3,  0,   0,   0,   0,   0,   0,  -3,
                    3,   5,   5,   5,   5,   5,   5,   3,
                    0,   3,   3,   3,   3,   3,   3,   0
            },
            // QUEEN
            {
                    -5,  -3,  -3,  -2,  -2,  -3,  -3,  -5,
                    -3,   0,   0,   2,   2,   0,   0,  -3,
                    -3,   0,   2,   4,   4,   2,   0,  -3,
                    -2,   0,   4,   5,   5,   4,   0,  -2,
                    -2,   0,   4,   5,   5,   4,   0,  -2,
                    -3,   0,   2,   4,   4,   2,   0,  -3,
                    -3,   0,   0,   2,   2,   0,   0,  -3,
                    -5,  -3,  -3,  -2,  -2,  -3,  -3,  -5
            },
            // KING
            {
                    15,  20,  10,   0,   0,   5,  20,  15,
                    10,  10,   0,  -3,  -3,   0,  10,  10,
                    0,   0,  -5, -10, -10,  -5,   0,   0,
                    -5, -10, -10, -15, -15, -10, -10,  -5,
                    -10, -15, -15, -20, -20, -15, -15, -10,
                    -15, -20, -20, -25, -25, -20, -20, -15,
                    -15, -20, -20, -25, -25, -20, -20, -15,
                    -15, -20, -20, -25, -25, -20, -20, -15
            }
    };
}
